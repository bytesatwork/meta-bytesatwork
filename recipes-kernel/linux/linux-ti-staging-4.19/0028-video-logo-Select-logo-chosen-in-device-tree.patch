From 5b5e4831ce6065deb00b123c11cd39f96b4a0835 Mon Sep 17 00:00:00 2001
From: Daniel Ammann <daniel.ammann@bytesatwork.ch>
Date: Thu, 7 Mar 2019 17:14:21 +0100
Subject: [PATCH] video/logo: Select logo chosen in device tree

Introduce CONFIG_LOGO_OF_SELECT, which, when enabled, selects the logo
to display from the device tree. You need to add an entry to the root
node, like this:

chosen {
	logo = "logo_custom_size_7_clut224";
};

If this option is not selected, the behavior is like mainline linux.
---
 drivers/video/logo/Kconfig |  3 +++
 drivers/video/logo/logo.c  | 67 ++++++++++++++++++++++++++++++++++++----------
 include/linux/linux_logo.h |  1 +
 scripts/pnmtologo.c        |  3 ++-
 4 files changed, 59 insertions(+), 15 deletions(-)

diff --git a/drivers/video/logo/Kconfig b/drivers/video/logo/Kconfig
index 0fc461ebf027..6f59ab8c88ab 100644
--- a/drivers/video/logo/Kconfig
+++ b/drivers/video/logo/Kconfig
@@ -15,6 +15,9 @@ config FB_LOGO_EXTRA
 	depends on FB=y
 	default y if SPU_BASE
 
+config LOGO_OF_SELECT
+	bool "Select logo from device tree"
+
 config LOGO_LINUX_MONO
 	bool "Standard black and white Linux logo"
 	default y
diff --git a/drivers/video/logo/logo.c b/drivers/video/logo/logo.c
index f96da4b28cdd..1fae523311df 100644
--- a/drivers/video/logo/logo.c
+++ b/drivers/video/logo/logo.c
@@ -17,6 +17,9 @@
 #include <asm/setup.h>
 #endif
 
+#include <linux/of_device.h>
+#include <linux/of_platform.h>
+
 static bool nologo;
 module_param(nologo, bool, 0);
 MODULE_PARM_DESC(nologo, "Disables startup logo");
@@ -36,6 +39,28 @@ static int __init fb_logo_late_init(void)
 
 late_initcall_sync(fb_logo_late_init);
 
+#ifdef CONFIG_LOGO_OF_SELECT
+const static inline struct linux_logo *assign_if_match(const char *of_logo, const struct linux_logo *logo)
+{
+	if (of_logo && strcmp(of_logo, logo->name) == 0) {
+		return logo;
+	}
+
+	return NULL;
+}
+#endif
+
+#ifndef CONFIG_LOGO_OF_SELECT
+/* just assign the logo since it is not retrieved from the device tree */
+#define ASSIGN_LOGO(x) logo = &x
+#else
+#define ASSIGN_LOGO(x) do {			     \
+	if (!logo) {				     \
+		logo = assign_if_match(of_logo, &x); \
+	}					     \
+} while (0)
+#endif
+
 /* logo's are marked __initdata. Use __ref to tell
  * modpost that it is intended that this function uses data
  * marked __initdata.
@@ -43,70 +68,84 @@ late_initcall_sync(fb_logo_late_init);
 const struct linux_logo * __ref fb_find_logo(int depth)
 {
 	const struct linux_logo *logo = NULL;
+	const char *of_logo = NULL;
+
+#ifdef CONFIG_LOGO_OF_SELECT
+	struct device_node *of_chosen;
+#endif
 
 	if (nologo || logos_freed)
 		return NULL;
 
+#ifdef CONFIG_LOGO_OF_SELECT
+	of_chosen = of_find_node_by_path("/chosen");
+	if (of_chosen == NULL)
+		of_chosen = of_find_node_by_path("/chosen@0");
+
+	if (of_chosen != NULL)
+		of_property_read_string(of_chosen, "logo", &of_logo);
+#endif
+
 	if (depth >= 1) {
 #ifdef CONFIG_LOGO_LINUX_MONO
 		/* Generic Linux logo */
-		logo = &logo_linux_mono;
+		ASSIGN_LOGO(logo_linux_mono);
 #endif
 #ifdef CONFIG_LOGO_SUPERH_MONO
 		/* SuperH Linux logo */
-		logo = &logo_superh_mono;
+		ASSIGN_LOGO(logo_superh_mono);
 #endif
 	}
 	
 	if (depth >= 4) {
 #ifdef CONFIG_LOGO_LINUX_VGA16
 		/* Generic Linux logo */
-		logo = &logo_linux_vga16;
+		ASSIGN_LOGO(logo_linux_vga16);
 #endif
 #ifdef CONFIG_LOGO_SUPERH_VGA16
 		/* SuperH Linux logo */
-		logo = &logo_superh_vga16;
+		ASSIGN_LOGO(logo_superh_vga16);
 #endif
 	}
 	
 	if (depth >= 8) {
 #ifdef CONFIG_LOGO_LINUX_CLUT224
 		/* Generic Linux logo */
-		logo = &logo_linux_clut224;
+		ASSIGN_LOGO(logo_linux_clut224);
 #endif
 #ifdef CONFIG_LOGO_DEC_CLUT224
 		/* DEC Linux logo on MIPS/MIPS64 or ALPHA */
-		logo = &logo_dec_clut224;
+		ASSIGN_LOGO(logo_dec_clut224);
 #endif
 #ifdef CONFIG_LOGO_MAC_CLUT224
 		/* Macintosh Linux logo on m68k */
 		if (MACH_IS_MAC)
-			logo = &logo_mac_clut224;
+			ASSIGN_LOGO(logo_mac_clut224);
 #endif
 #ifdef CONFIG_LOGO_PARISC_CLUT224
 		/* PA-RISC Linux logo */
-		logo = &logo_parisc_clut224;
+		ASSIGN_LOGO(logo_parisc_clut224);
 #endif
 #ifdef CONFIG_LOGO_SGI_CLUT224
 		/* SGI Linux logo on MIPS/MIPS64 */
-		logo = &logo_sgi_clut224;
+		ASSIGN_LOGO(logo_sgi_clut224);
 #endif
 #ifdef CONFIG_LOGO_SUN_CLUT224
 		/* Sun Linux logo */
-		logo = &logo_sun_clut224;
+		ASSIGN_LOGO(logo_sun_clut224);
 #endif
 #ifdef CONFIG_LOGO_SUPERH_CLUT224
 		/* SuperH Linux logo */
-		logo = &logo_superh_clut224;
+		ASSIGN_LOGO(logo_superh_clut224);
 #endif
 #ifdef CONFIG_LOGO_BAW_1024X600_CLUT224
-		logo = &logo_baw_1024x600_clut224;
+		ASSIGN_LOGO(logo_baw_1024x600_clut224);
 #endif
 #ifdef CONFIG_LOGO_BAW_800X480_CLUT224
-		logo = &logo_baw_800x480_clut224;
+		ASSIGN_LOGO(logo_baw_800x480_clut224);
 #endif
 #ifdef CONFIG_LOGO_BAW_480X272_CLUT224
-		logo = &logo_baw_480x272_clut224;
+		ASSIGN_LOGO(logo_baw_480x272_clut224);
 #endif
 	}
 	return logo;
diff --git a/include/linux/linux_logo.h b/include/linux/linux_logo.h
index 5538761853fb..6255fece2ae6 100644
--- a/include/linux/linux_logo.h
+++ b/include/linux/linux_logo.h
@@ -31,6 +31,7 @@ struct linux_logo {
 	unsigned int clutsize;		/* LINUX_LOGO_CLUT224 only */
 	const unsigned char *clut;	/* LINUX_LOGO_CLUT224 only */
 	const unsigned char *data;
+	const unsigned char *name;
 };
 
 extern const struct linux_logo logo_linux_mono;
diff --git a/scripts/pnmtologo.c b/scripts/pnmtologo.c
index 4718d7895f0b..24c6ea9ab3fd 100644
--- a/scripts/pnmtologo.c
+++ b/scripts/pnmtologo.c
@@ -259,7 +259,8 @@ static void write_footer(void)
 	fprintf(out, "\t.clutsize\t= %d,\n", logo_clutsize);
 	fprintf(out, "\t.clut\t\t= %s_clut,\n", logoname);
     }
-    fprintf(out, "\t.data\t\t= %s_data\n", logoname);
+    fprintf(out, "\t.data\t\t= %s_data,\n", logoname);
+    fprintf(out, "\t.name\t\t= \"%s\"\n", logoname);
     fputs("};\n\n", out);
 
     /* close logo file */
-- 
2.11.0

