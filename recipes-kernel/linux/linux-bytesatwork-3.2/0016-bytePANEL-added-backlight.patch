From 2bbc9b4ff36fb3cb5ffb8138a86d44b90fb5e0d5 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Urs=20F=C3=A4ssler?= <urs@bytesatwork.ch>
Date: Fri, 18 Oct 2013 12:55:33 +0200
Subject: [PATCH] bytePANEL: added backlight

---
 arch/arm/mach-omap2/board-am335x-bytepanel.c |   55 ++++++++++++++++++++++++++
 1 file changed, 55 insertions(+)

diff --git a/arch/arm/mach-omap2/board-am335x-bytepanel.c b/arch/arm/mach-omap2/board-am335x-bytepanel.c
index 0e921a1..6afa2f3 100644
--- a/arch/arm/mach-omap2/board-am335x-bytepanel.c
+++ b/arch/arm/mach-omap2/board-am335x-bytepanel.c
@@ -105,6 +105,33 @@ static struct da8xx_lcdc_platform_data EMERGING_pdata = {
 	.type			= "EMERGING",
 };
 
+/* LCD backlight platform Data */
+#define AM335X_BACKLIGHT_MAX_BRIGHTNESS		100
+#define AM335X_BACKLIGHT_DEFAULT_BRIGHTNESS	100
+#define AM335X_PWM_PERIOD_NANO_SECONDS		(1000 * 1000)
+
+static struct platform_pwm_backlight_data am335x_backlight_data0 = {
+	.pwm_id	 	= "ecap.0",
+	.ch	     	= -1,
+	.lth_brightness = 10,	/* minimum brightness */
+	.max_brightness = AM335X_BACKLIGHT_MAX_BRIGHTNESS,
+	.dft_brightness = AM335X_BACKLIGHT_DEFAULT_BRIGHTNESS,
+	.pwm_period_ns  = AM335X_PWM_PERIOD_NANO_SECONDS,
+};
+
+/* Setup pwm-backlight */
+static struct platform_device am335x_backlight = {
+	.name	= "pwm-backlight",
+	.id     = -1,
+	.dev    = {
+		.platform_data  = &am335x_backlight_data0,
+	},
+};
+
+static struct pwmss_platform_data  pwm_pdata = {
+	.version = PWM_VERSION_1,
+};
+
 static struct omap2_hsmmc_info am335x_mmc[] __initdata = {
 	{
 		.mmc            = 1,
@@ -172,6 +199,14 @@ int am335x_evm_get_id(void)
 }
 EXPORT_SYMBOL(am335x_evm_get_id);
 
+static struct pinmux_config backlight_pin_mux[] = {
+	{"ecap0_in_pwm0_out.ecap0_in_pwm0_out",	OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT
+							       | AM33XX_PULL_DISA},
+	{"gpmc_a11.gpio1_27",			OMAP_MUX_MODE7 | AM33XX_PIN_OUTPUT
+							       | AM33XX_PULL_DISA},
+	{NULL, 0},
+};
+
 /* Module pin mux for LCDC */
 static struct pinmux_config lcdc_pin_mux[] = {
 	{"lcd_data0.lcd_data0",		OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT
@@ -341,6 +376,26 @@ out:
 	return ret;
 }
 
+#define LCD_BACKLIGHT_ENABLE GPIO_TO_PIN(1,27)
+static int __init backlight_init(void)
+{
+	int r;
+	setup_pin_mux(backlight_pin_mux);
+	r = gpio_request(LCD_BACKLIGHT_ENABLE, "backlight_ena");
+	if (r) {
+		printk(KERN_ERR "failed to get backlight_ena\n");
+		return	-EINVAL;
+	}
+	gpio_direction_output(LCD_BACKLIGHT_ENABLE, 1);
+	gpio_export(LCD_BACKLIGHT_ENABLE,0);
+
+	pwm_pdata.chan_attrib[0].inverse_pol = true;
+	am33xx_register_ecap(0, &pwm_pdata);
+	platform_device_register(&am335x_backlight);
+	return 0;
+}
+late_initcall(backlight_init);
+
 #define LCD_PANEL_PWR GPIO_TO_PIN(1,20)
 #define LCD_PANEL_PWM GPIO_TO_PIN(0,7)
 #define LCD_DATA_ENABLE GPIO_TO_PIN(1,25)
-- 
1.7.10.4

