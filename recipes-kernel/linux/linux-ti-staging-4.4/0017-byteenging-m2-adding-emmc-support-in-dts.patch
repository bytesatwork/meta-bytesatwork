From eb2baff6e527b05687384260451c2372c5ad6dd6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Stephan=20D=C3=BCnner?= <stephan.duenner@bytesatwork.ch>
Date: Thu, 8 Jun 2017 16:39:14 +0200
Subject: [PATCH 17/17] byteenging-m2: adding emmc support in dts

---
 arch/arm/boot/dts/byteengine-m2-emmc.dtsi | 189 ++++++++++++++++++++++
 arch/arm/boot/dts/byteengine-m2.dtsi      |   2 +-
 arch/arm/boot/dts/bytepanel-emmc.dts      |  10 ++
 arch/arm/boot/dts/bytepanel-emmc.dtsi     | 259 ++++++++++++++++++++++++++++++
 arch/arm/boot/dts/bytepanel.dtsi          |   2 +-
 5 files changed, 460 insertions(+), 2 deletions(-)
 create mode 100644 arch/arm/boot/dts/byteengine-m2-emmc.dtsi
 create mode 100644 arch/arm/boot/dts/bytepanel-emmc.dts
 create mode 100644 arch/arm/boot/dts/bytepanel-emmc.dtsi

diff --git a/arch/arm/boot/dts/byteengine-m2-emmc.dtsi b/arch/arm/boot/dts/byteengine-m2-emmc.dtsi
new file mode 100644
index 0000000..6da2bb3
--- /dev/null
+++ b/arch/arm/boot/dts/byteengine-m2-emmc.dtsi
@@ -0,0 +1,189 @@
+/*
+ * Copyright (C) 2015 Bytes at Work - http://www.bytesatwork.ch
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#include "am33xx.dtsi"
+#include <dt-bindings/pinctrl/am335x-names.h>
+
+/ {
+	model = "byteEngine M2 Rev4 (EMMC)";
+	compatible = "batw,m2", "ti,am33xx";
+
+	cpus {
+		cpu@0 {
+			cpu0-supply = <&vdd1_reg>;
+		};
+	};
+
+	vbat: fixedregulator@0 {
+		compatible = "regulator-fixed";
+		regulator-name = "vbat";
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+		regulator-boot-on;
+	};
+
+};
+
+&am33xx_pinmux {
+
+	i2c0_pins: pinmux_i2c0_pins {
+		pinctrl-single,pins = <
+			PIN_I2C0_SDA		(PIN_INPUT_PULLUP | MUX_MODE0)
+			PIN_I2C0_SCL		(PIN_INPUT_PULLUP | MUX_MODE0)
+		>;
+	};
+
+	emmc_pins: pinmux_emmc_pins {
+		pinctrl-single,pins = <
+			PIN_GPMC_CSN1 (PIN_INPUT_PULLUP | MUX_MODE2) /* gpmc_csn1.mmc1_clk */
+			PIN_GPMC_CSN2 (PIN_INPUT_PULLUP | MUX_MODE2) /* gpmc_csn2.mmc1_cmd */
+			PIN_GPMC_AD0 (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad0.mmc1_dat0 */
+			PIN_GPMC_AD1 (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad1.mmc1_dat1 */
+			PIN_GPMC_AD2 (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad2.mmc1_dat2 */
+			PIN_GPMC_AD3 (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad3.mmc1_dat3 */
+			PIN_GPMC_AD4 (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad4.mmc1_dat4 */
+			PIN_GPMC_AD5 (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad5.mmc1_dat5 */
+			PIN_GPMC_AD6 (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad6.mmc1_dat6 */
+			PIN_GPMC_AD7 (PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_ad7.mmc1_dat7 */
+
+		>;
+	};
+	
+	spi0_pins: spi0_pins {
+		pinctrl-single,pins = <
+			PIN_SPI0_SCLK 		( PIN_INPUT | MUX_MODE0 ) 	/* (A17) spi0_sclk.spi0_sclk */
+			PIN_SPI0_D0 		( PIN_INPUT | MUX_MODE0 ) 	/* (B17) spi0_d0.spi0_d0 */
+			PIN_SPI0_D1 		( PIN_OUTPUT | MUX_MODE0 ) 	/* (B16) spi0_d1.spi0_d1 */
+			PIN_SPI0_CS0 		( PIN_OUTPUT | MUX_MODE0 ) 	/* (A16) spi0_cs0.spi0_cs0 */
+		>;
+	};
+};
+
+&i2c0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&i2c0_pins>;
+
+	status = "okay";
+	clock-frequency = <100000>;
+
+	tps: tps@2d {
+		reg = <0x2d>;
+	};
+
+	eeprom: eeprom@50 {
+		reg = <0x50>;
+	};
+};
+
+#include "tps65910.dtsi"
+
+&tps {
+	vcc1-supply = <&vbat>;
+	vcc2-supply = <&vbat>;
+	vcc3-supply = <&vbat>;
+	vcc4-supply = <&vbat>;
+	vcc5-supply = <&vbat>;
+	vcc6-supply = <&vbat>;
+	vcc7-supply = <&vbat>;
+	vccio-supply = <&vbat>;
+
+	regulators {
+		vrtc_reg: regulator@0 {
+			regulator-always-on;
+		};
+
+		vio_reg: regulator@1 {
+			regulator-always-on;
+		};
+
+		vdd1_reg: regulator@2 {
+			regulator-name = "vdd_mpu";
+			regulator-min-microvolt = <600000>;
+			regulator-max-microvolt = <1500000>;
+			regulator-boot-on;
+			regulator-always-on;
+		};
+
+		vdd2_reg: regulator@3 {
+			regulator-name = "vdd_core";
+			regulator-min-microvolt = <600000>;
+			regulator-max-microvolt = <1500000>;
+			regulator-boot-on;
+			regulator-always-on;
+		};
+
+		vdd3_reg: regulator@4 {
+			regulator-always-on;
+		};
+
+		vdig1_reg: regulator@5 {
+			regulator-always-on;
+		};
+
+		vdig2_reg: regulator@6 {
+			regulator-always-on;
+		};
+
+		vpll_reg: regulator@7 {
+			regulator-always-on;
+		};
+
+		vdac_reg: regulator@8 {
+			regulator-always-on;
+		};
+
+		vaux1_reg: regulator@9 {
+			regulator-always-on;
+		};
+
+		vaux2_reg: regulator@10 {
+			regulator-always-on;
+		};
+
+		vaux33_reg: regulator@11 {
+			regulator-always-on;
+		};
+
+		vmmc_reg: regulator@12 {
+			regulator-min-microvolt = <1800000>;
+			regulator-max-microvolt = <3300000>;
+			regulator-always-on;
+		};
+	};
+};
+
+&eeprom {
+	status = "okay";
+	compatible = "at,24c256";
+};
+
+
+&spi0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&spi0_pins>;
+	status = "okay";
+	
+	spinor: flash@0 {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		compatible = "st,m25pe40", "jedec,spi-nor";
+		spi-max-frequency = <20000000>;
+		reg = <0>;
+	};
+};
+
+
+&mmc2 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&emmc_pins>;
+	vmmc-supply = <&vmmc_reg>;
+	status = "okay";
+	ti,non-removable;
+	bus-width = <8>;
+	
+};
diff --git a/arch/arm/boot/dts/byteengine-m2.dtsi b/arch/arm/boot/dts/byteengine-m2.dtsi
index 523262b..b550b28 100644
--- a/arch/arm/boot/dts/byteengine-m2.dtsi
+++ b/arch/arm/boot/dts/byteengine-m2.dtsi
@@ -10,7 +10,7 @@
 #include <dt-bindings/pinctrl/am335x-names.h>
 
 / {
-	model = "byteEngine M2";
+	model = "byteEngine M2 Rev0-2 (NAND)";
 	compatible = "batw,m2", "ti,am33xx";
 
 	cpus {
diff --git a/arch/arm/boot/dts/bytepanel-emmc.dts b/arch/arm/boot/dts/bytepanel-emmc.dts
new file mode 100644
index 0000000..a26d2936
--- /dev/null
+++ b/arch/arm/boot/dts/bytepanel-emmc.dts
@@ -0,0 +1,10 @@
+/*
+ * Copyright (C) 2015 Bytes at Work - http://www.bytesatwork.ch
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+/dts-v1/;
+
+#include "bytepanel-emmc.dtsi"
diff --git a/arch/arm/boot/dts/bytepanel-emmc.dtsi b/arch/arm/boot/dts/bytepanel-emmc.dtsi
new file mode 100644
index 0000000..9d75b3e
--- /dev/null
+++ b/arch/arm/boot/dts/bytepanel-emmc.dtsi
@@ -0,0 +1,259 @@
+/*
+ * Copyright (C) 2015 Bytes at Work - http://www.bytesatwork.ch
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#include "byteengine-m2-emmc.dtsi"
+
+/ {
+	model = "bytePanel with M2 Rev4 and EMMC";
+	compatible = "batw,bytepanel", "batw,m2", "ti,am33xx";
+
+	// ---- Backlight for all displays on X11, X12, X13 ----
+	backlight: backlight {
+		compatible = "pwm-backlight";
+		status = "disabled";
+		pwms = <&ecap0 0 50000 0>;
+		brightness-levels = <0 4 8 16 32 64 128 255>;
+		default-brightness-level = <6>;
+		enable-gpios = <&gpio1 27 0>;
+	};
+
+	// FIXME: set pins not as LED; use a muxer or so
+	dispconf {
+		compatible = "gpio-leds";
+		status = "disabled";
+		pinctrl-names = "default";
+		pinctrl-0 = <&display_pins>;
+
+		lcd_data_enable: lcd_data_enable {
+			gpios = <&gpio1 25 1>;
+			default-state = "off";
+		};
+
+		lcd_lvds_shutdown: lcd_lvds_shutdown {
+			gpios = <&gpio1 26 1>;
+			default-state = "on";
+		};
+
+		lcd_panel_pwr: lcd_panel_pwr {
+			gpios = <&gpio1 20 0>;
+			default-state = "on";
+		};
+	};
+};
+
+&am33xx_pinmux {
+	// ---- UART0 on X3 ----
+	uart0_pins: pinmux_uart0_pins {
+		pinctrl-single,pins = <
+			PIN_UART0_RXD	(MUX_MODE0 | PIN_INPUT_PULLUP)
+			PIN_UART0_TXD	(MUX_MODE0 | PIN_OUTPUT_PULLDOWN)
+		>;
+	};
+
+	// ---- ETHERNET on X8 ----
+	cpsw_default: pinmux_cpsw_default {
+		pinctrl-single,pins = <
+			PIN_MII1_RX_ER	(MUX_MODE0 | PIN_INPUT_PULLDOWN)
+			PIN_MII1_RX_DV	(MUX_MODE0 | PIN_INPUT_PULLDOWN)
+			PIN_MII1_COL	(MUX_MODE0 | PIN_INPUT_PULLDOWN)
+			PIN_MII1_CRS	(MUX_MODE0 | PIN_INPUT_PULLDOWN)
+			PIN_MII1_RX_CLK	(MUX_MODE0 | PIN_INPUT_PULLDOWN)
+			PIN_MII1_RXD0	(MUX_MODE0 | PIN_INPUT_PULLDOWN)
+			PIN_MII1_RXD1	(MUX_MODE0 | PIN_INPUT_PULLDOWN)
+			PIN_MII1_RXD2	(MUX_MODE0 | PIN_INPUT_PULLDOWN)
+			PIN_MII1_RXD3	(MUX_MODE0 | PIN_INPUT_PULLDOWN)
+			PIN_MII1_TX_CLK	(MUX_MODE0 | PIN_INPUT_PULLDOWN)
+			PIN_MII1_TX_EN	(MUX_MODE0 | PIN_OUTPUT)
+			PIN_MII1_TXD0	(MUX_MODE0 | PIN_OUTPUT)
+			PIN_MII1_TXD1	(MUX_MODE0 | PIN_OUTPUT)
+			PIN_MII1_TXD2	(MUX_MODE0 | PIN_OUTPUT)
+			PIN_MII1_TXD3	(MUX_MODE0 | PIN_OUTPUT)
+		>;
+	};
+
+	davinci_mdio_default: pinmux_davinci_mdio_default {
+		pinctrl-single,pins = <
+			PIN_MDIO	(MUX_MODE0 | PIN_INPUT_PULLUP)
+			PIN_MDC		(MUX_MODE0 | PIN_OUTPUT_PULLUP)
+		>;
+	};
+
+	// ---- MMC on X9 ----
+	mmc1_common: pinmux_mmc0_common {
+		pinctrl-single,pins = <
+			PIN_MMC0_DAT0	(MUX_MODE0 | PIN_INPUT_PULLUP)
+			PIN_MMC0_DAT1	(MUX_MODE0 | PIN_INPUT_PULLUP)
+			PIN_MMC0_DAT2	(MUX_MODE0 | PIN_INPUT_PULLUP)
+			PIN_MMC0_DAT3	(MUX_MODE0 | PIN_INPUT_PULLUP)
+			PIN_MMC0_CMD	(MUX_MODE0 | PIN_INPUT_PULLUP)
+			PIN_MMC0_CLK	(MUX_MODE0 | PIN_INPUT_PULLUP)
+		>;
+	};
+
+	mmc1_cd: pinmux_mmc0_cd {
+		pinctrl-single,pins = <
+			PIN_SPI0_CS1	(MUX_MODE7 | PIN_INPUT_PULLUP)		// gpio0_6
+		>;
+	};
+
+	// ---- USB on X7 ----
+	usb_pins: pinmux_usb_pins {
+		pinctrl-single,pins = <
+			PIN_USB0_DRVVBUS        (MUX_MODE0 | PIN_OUTPUT)
+			PIN_USB1_DRVVBUS        (MUX_MODE0 | PIN_OUTPUT)
+		>;
+	};
+
+	// ---- Backlight for all displays on X11, X12, X13 ----
+	ecap0_pins: pinmux_ecap0_pins {
+		pinctrl-single,pins = <
+			PIN_ECAP0_IN_PWM0_OUT	(MUX_MODE0 | PIN_OUTPUT)
+			PIN_GPMC_A11		(MUX_MODE7 | PIN_OUTPUT)	// gpio1_27
+		>;
+	};
+
+	// ---- Display configuration X11, X13 ----
+	display_pins: pinmux_display_pins {
+		pinctrl-single,pins = <
+			PIN_GPMC_A4		(MUX_MODE7 | PIN_OUTPUT)	// gpio1_20
+			PIN_GPMC_A9		(MUX_MODE7 | PIN_OUTPUT)	// gpio1_25
+			PIN_GPMC_A10		(MUX_MODE7 | PIN_OUTPUT)	// gpio1_26
+		>;
+	};
+
+	// ---- Onboard audio and external touch  ----
+	i2c1_pins: pinmux_i2c1_pins {
+		pinctrl-single,pins = <
+			PIN_UART0_CTSN		(MUX_MODE3 | PIN_INPUT_PULLUP | SLEWCTRL_FAST)	// I2C1_SDA
+			PIN_UART0_RTSN		(MUX_MODE3 | PIN_INPUT_PULLUP | SLEWCTRL_FAST)	// I2C1_SCL
+		>;
+	};
+
+	// ---- UART1 on X6  ----
+	uart1_pins: pinmux_uart1_pins {
+		pinctrl-single,pins = <
+			PIN_UART1_RTSN		(MUX_MODE0 | PIN_OUTPUT)		// UART1_RTSn
+			PIN_UART1_CTSN		(MUX_MODE0 | PIN_INPUT)			// UART1_CTSn
+			PIN_UART1_TXD		(MUX_MODE0 | PIN_OUTPUT)		// UART1_TXD
+			PIN_UART1_RXD		(MUX_MODE0 | PIN_INPUT)			// UART1_RXD
+			PIN_MCASP0_FSR		(MUX_MODE7 | PIN_OUTPUT_PULLDOWN)	// GPIOMUX1
+			PIN_MCASP0_ACLKX	(MUX_MODE7 | PIN_OUTPUT_PULLDOWN)	// GPIOMUX2
+			PIN_MCASP0_ACLKR	(MUX_MODE7 | PIN_OUTPUT_PULLDOWN)	// GPIOMUX3
+		>;
+	};
+
+	// -----DCAN1 on X6 -----
+	dcan1_pins: pinmux_dcan1_pins {
+		pinctrl-single,pins = <
+			PIN_UART1_RXD		(MUX_MODE2 | PIN_OUTPUT)	// (dcan1_tx)
+			PIN_UART1_TXD		(MUX_MODE2 | PIN_INPUT)		// (dcan1_rx)
+		>;
+	};
+};
+
+// ---- UART0 on X3 ----
+&uart0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&uart0_pins>;
+	status = "okay";
+};
+
+// -----DCAN1 on X6 -----
+&dcan1 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&dcan1_pins>;
+	status = "disabled";
+};
+
+// ---- UART1 on X6 ----
+&uart1 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&uart1_pins>;
+	status = "okay";
+};
+
+// ---- ETHERNET on X8 ----
+&davinci_mdio {
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&davinci_mdio_default>;
+};
+
+&cpsw_emac0 {
+	phy_id = <&davinci_mdio>, <0>;
+	phy-mode = "mii";
+};
+
+&mac {
+	status = "okay";
+	pinctrl-names = "default";
+	pinctrl-0 = <&cpsw_default>;
+
+	slaves = <1>;
+	active_slave = <0>;
+};
+
+// ---- MMC on X9 ----
+&mmc1 {
+	status = "okay";
+	vmmc-supply = <&vmmc_reg>;
+	bus-width = <4>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&mmc1_cd>;
+	cd-gpios = <&gpio0 6 GPIO_ACTIVE_HIGH>;
+	cd-inverted;
+};
+
+// ---- USB on X7 ----
+&usb {
+	pinctrl-names = "default";
+	pinctrl-0 = <&usb_pins>;
+
+	status = "okay";
+
+	control@44e10620 {
+		status = "okay";
+	};
+
+	usb-phy@47401300 {
+		status = "okay";
+	};
+
+	usb@47401000 {
+		status = "okay";
+		dr_mode = "host";
+	};
+
+	usb-phy@47401b00 {
+		status = "okay";
+	};
+
+	usb@47401800 {
+		status = "okay";
+		dr_mode = "host";
+	};
+
+	dma-controller@47402000  {
+		status = "okay";
+	};
+};
+
+// ---- Backlight for all displays on X11, X12, X13 ----
+&ecap0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&ecap0_pins>;
+};
+
+// ---- Onboard audio and external touch ----
+&i2c1 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&i2c1_pins>;
+
+	status = "okay";
+	clock-frequency = <400000>;
+};
diff --git a/arch/arm/boot/dts/bytepanel.dtsi b/arch/arm/boot/dts/bytepanel.dtsi
index e80ec4c..244f3ae 100644
--- a/arch/arm/boot/dts/bytepanel.dtsi
+++ b/arch/arm/boot/dts/bytepanel.dtsi
@@ -9,7 +9,7 @@
 #include "byteengine-m2.dtsi"
 
 / {
-	model = "bytePanel";
+	model = "bytePanel with M2 Rev 0-2 and NAND";
 	compatible = "batw,bytepanel", "batw,m2", "ti,am33xx";
 
 	// ---- Backlight for all displays on X11, X12, X13 ----
-- 
2.1.4

