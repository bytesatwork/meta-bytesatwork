From f339ecdc09de6df7786bbe7175ac36aa428105b0 Mon Sep 17 00:00:00 2001
From: Daniel Ammann <daniel.ammann@bytesatwork.ch>
Date: Tue, 7 Nov 2017 09:42:38 +0100
Subject: [PATCH] byteboard: Update to U-Boot 2016.05

---
 arch/arm/Kconfig                                 |   7 +-
 arch/arm/cpu/armv7/am33xx/Kconfig                |   5 +
 board/bytesatwork/{m3 => byteboard}/Kconfig      |   6 +-
 board/bytesatwork/{m3 => byteboard}/Makefile     |   0
 board/bytesatwork/{m3 => byteboard}/board.c      | 112 +++++++++++++++++++++++
 board/bytesatwork/{m3 => byteboard}/board.h      |   0
 board/bytesatwork/{m3 => byteboard}/mux.c        |  20 ++++
 configs/byteboard_defconfig                      |  33 +++++++
 configs/byteengine_m3_defconfig                  |  13 ---
 include/configs/{byteengine_m3.h => byteboard.h} |  12 +--
 10 files changed, 176 insertions(+), 32 deletions(-)
 rename board/bytesatwork/{m3 => byteboard}/Kconfig (66%)
 rename board/bytesatwork/{m3 => byteboard}/Makefile (100%)
 rename board/bytesatwork/{m3 => byteboard}/board.c (75%)
 rename board/bytesatwork/{m3 => byteboard}/board.h (100%)
 rename board/bytesatwork/{m3 => byteboard}/mux.c (77%)
 create mode 100644 configs/byteboard_defconfig
 delete mode 100644 configs/byteengine_m3_defconfig
 rename include/configs/{byteengine_m3.h => byteboard.h} (94%)

diff --git a/arch/arm/Kconfig b/arch/arm/Kconfig
index af5e46541b..a224bb09d5 100644
--- a/arch/arm/Kconfig
+++ b/arch/arm/Kconfig
@@ -317,11 +317,6 @@ config TARGET_RUT
 	select CPU_V7
 	select SUPPORT_SPL
 
-config TARGET_BYTEENGINE_M3
-	bool "Support byteengine_m3"
-	select CPU_V7
-	select SUPPORT_SPL
-
 config TARGET_TI814X_EVM
 	bool "Support ti814x_evm"
 	select CPU_V7
@@ -810,7 +805,7 @@ source "board/tcl/sl50/Kconfig"
 source "board/ti/am335x/Kconfig"
 source "board/bytesatwork/am335x/Kconfig"
 source "board/ti/am43xx/Kconfig"
-source "board/bytesatwork/m3/Kconfig"
+source "board/bytesatwork/byteboard/Kconfig"
 source "board/birdland/bav335x/Kconfig"
 source "board/ti/ti814x/Kconfig"
 source "board/ti/ti816x/Kconfig"
diff --git a/arch/arm/cpu/armv7/am33xx/Kconfig b/arch/arm/cpu/armv7/am33xx/Kconfig
index f32181723a..128dfe21a0 100644
--- a/arch/arm/cpu/armv7/am33xx/Kconfig
+++ b/arch/arm/cpu/armv7/am33xx/Kconfig
@@ -103,6 +103,11 @@ config TARGET_AM43XX_EVM
 	  evaluation module system that enables developers
 	  to write software and develop hardware around
 	  an AM43xx processor subsystem.
+
+config TARGET_BYTEBOARD
+	bool "Support byteboard"
+	help
+	  Support for byteboard.
 endif
 
 if AM43XX || AM33XX
diff --git a/board/bytesatwork/m3/Kconfig b/board/bytesatwork/byteboard/Kconfig
similarity index 66%
rename from board/bytesatwork/m3/Kconfig
rename to board/bytesatwork/byteboard/Kconfig
index 0a61001072..a7087d1406 100644
--- a/board/bytesatwork/m3/Kconfig
+++ b/board/bytesatwork/byteboard/Kconfig
@@ -1,7 +1,7 @@
-if TARGET_BYTEENGINE_M3
+if TARGET_BYTEBOARD
 
 config SYS_BOARD
-	default "m3"
+	default "byteboard"
 
 config SYS_VENDOR
 	default "bytesatwork"
@@ -10,6 +10,6 @@ config SYS_SOC
 	default "am33xx"
 
 config SYS_CONFIG_NAME
-	default "byteengine_m3"
+	default "byteboard"
 
 endif
diff --git a/board/bytesatwork/m3/Makefile b/board/bytesatwork/byteboard/Makefile
similarity index 100%
rename from board/bytesatwork/m3/Makefile
rename to board/bytesatwork/byteboard/Makefile
diff --git a/board/bytesatwork/m3/board.c b/board/bytesatwork/byteboard/board.c
similarity index 75%
rename from board/bytesatwork/m3/board.c
rename to board/bytesatwork/byteboard/board.c
index bff0566bfc..fdd09459a3 100644
--- a/board/bytesatwork/m3/board.c
+++ b/board/bytesatwork/byteboard/board.c
@@ -347,3 +347,115 @@ int board_init(void)
 	writel(modena_init0_watermark_0, &bwlimiter->modena_init0_watermark_0);
 	return 0;
 }
+
+#if (defined(CONFIG_DRIVER_TI_CPSW) && !defined(CONFIG_SPL_BUILD)) || \
+	(defined(CONFIG_SPL_ETH_SUPPORT) && defined(CONFIG_SPL_BUILD))
+static void cpsw_control(int enabled)
+{
+	/* Additional controls can be added here */
+	return;
+}
+
+static struct cpsw_slave_data cpsw_slaves[] = {
+	{
+		.slave_reg_ofs	= 0x208,
+		.sliver_reg_ofs	= 0xd80,
+		.phy_addr	= 16,
+	},
+	{
+		.slave_reg_ofs	= 0x308,
+		.sliver_reg_ofs	= 0xdc0,
+		.phy_addr	= 1,
+	},
+};
+
+static struct cpsw_platform_data cpsw_data = {
+	.mdio_base		= CPSW_MDIO_BASE,
+	.cpsw_base		= CPSW_BASE,
+	.mdio_div		= 0xff,
+	.channels		= 8,
+	.cpdma_reg_ofs		= 0x800,
+	.slaves			= 1,
+	.slave_data		= cpsw_slaves,
+	.ale_reg_ofs		= 0xd00,
+	.ale_entries		= 1024,
+	.host_port_reg_ofs	= 0x108,
+	.hw_stats_reg_ofs	= 0x900,
+	.bd_ram_ofs		= 0x2000,
+	.mac_control		= (1 << 5),
+	.control		= cpsw_control,
+	.host_port_num		= 0,
+	.version		= CPSW_CTRL_VERSION_2,
+};
+#endif
+
+/*
+ * This function will:
+ * Read the eFuse for MAC addresses, and set ethaddr/eth1addr/usbnet_devaddr
+ * in the environment
+ * Perform fixups to the PHY present on certain boards.  We only need this
+ * function in:
+ * - SPL with either CPSW or USB ethernet support
+ * - Full U-Boot, with either CPSW or USB ethernet
+ * Build in only these cases to avoid warnings about unused variables
+ * when we build an SPL that has neither option but full U-Boot will.
+ */
+#if ((defined(CONFIG_SPL_ETH_SUPPORT) || \
+	defined(CONFIG_SPL_USBETH_SUPPORT)) && \
+	defined(CONFIG_SPL_BUILD)) || \
+	((defined(CONFIG_DRIVER_TI_CPSW) || \
+	  defined(CONFIG_USB_ETHER)) && !defined(CONFIG_SPL_BUILD))
+int board_eth_init(bd_t *bis)
+{
+	int rv;
+	uint8_t mac_addr[6];
+	uint32_t mac_hi, mac_lo;
+
+	/* try reading mac address from efuse */
+	mac_lo = readl(&cdev->macid0l);
+	mac_hi = readl(&cdev->macid0h);
+	mac_addr[0] = mac_hi & 0xFF;
+	mac_addr[1] = (mac_hi & 0xFF00) >> 8;
+	mac_addr[2] = (mac_hi & 0xFF0000) >> 16;
+	mac_addr[3] = (mac_hi & 0xFF000000) >> 24;
+	mac_addr[4] = mac_lo & 0xFF;
+	mac_addr[5] = (mac_lo & 0xFF00) >> 8;
+
+#if (defined(CONFIG_DRIVER_TI_CPSW) && !defined(CONFIG_SPL_BUILD)) || \
+	(defined(CONFIG_SPL_ETH_SUPPORT) && defined(CONFIG_SPL_BUILD))
+	if (!getenv("ethaddr")) {
+		puts("<ethaddr> not set. Validating first E-fuse MAC\n");
+		if (is_valid_ethaddr(mac_addr))
+			eth_setenv_enetaddr("ethaddr", mac_addr);
+	}
+
+#ifndef CONFIG_SPL_BUILD
+	mac_lo = readl(&cdev->macid1l);
+	mac_hi = readl(&cdev->macid1h);
+	mac_addr[0] = mac_hi & 0xFF;
+	mac_addr[1] = (mac_hi & 0xFF00) >> 8;
+	mac_addr[2] = (mac_hi & 0xFF0000) >> 16;
+	mac_addr[3] = (mac_hi & 0xFF000000) >> 24;
+	mac_addr[4] = mac_lo & 0xFF;
+	mac_addr[5] = (mac_lo & 0xFF00) >> 8;
+
+	if (!getenv("eth1addr")) {
+		if (is_valid_ethaddr(mac_addr))
+			eth_setenv_enetaddr("eth1addr", mac_addr);
+	}
+#endif
+
+  writel(RGMII_MODE_ENABLE, &cdev->miisel);
+  cpsw_slaves[0].phy_if = PHY_INTERFACE_MODE_RGMII;
+  cpsw_slaves[0].phy_addr = 0;
+
+	rv = cpsw_register(&cpsw_data);
+	if (rv < 0) {
+		printf("Error %d registering CPSW switch\n", rv);
+		return rv;
+	}
+#endif
+
+	return rv;
+}
+#endif
diff --git a/board/bytesatwork/m3/board.h b/board/bytesatwork/byteboard/board.h
similarity index 100%
rename from board/bytesatwork/m3/board.h
rename to board/bytesatwork/byteboard/board.h
diff --git a/board/bytesatwork/m3/mux.c b/board/bytesatwork/byteboard/mux.c
similarity index 77%
rename from board/bytesatwork/m3/mux.c
rename to board/bytesatwork/byteboard/mux.c
index 23d69aaa80..dd61b15ab0 100644
--- a/board/bytesatwork/m3/mux.c
+++ b/board/bytesatwork/byteboard/mux.c
@@ -52,6 +52,25 @@ static struct module_pin_mux gpio5_7_pin_mux[] = {
 	{-1},
 };
 
+static struct module_pin_mux rgmii_pin_mux[] = {
+	{OFFSET(mii1_rxclk), MODE(2) | RXACTIVE},
+	{OFFSET(mii1_rxdv), MODE(2) | RXACTIVE},
+	{OFFSET(mii1_rxd0), MODE(2) | RXACTIVE},
+	{OFFSET(mii1_rxd1), MODE(2) | RXACTIVE},
+	{OFFSET(mii1_rxd2), MODE(2) | RXACTIVE},
+	{OFFSET(mii1_rxd3), MODE(2) | RXACTIVE},
+	{OFFSET(mii1_txen), MODE(2)},
+	{OFFSET(mii1_txclk), MODE(2)},
+	{OFFSET(mii1_txd0), MODE(2)},
+	{OFFSET(mii1_txd1), MODE(2)},
+	{OFFSET(mii1_txd2), MODE(2)},
+	{OFFSET(mii1_txd3), MODE(2)},
+	{OFFSET(mii1_col), MODE(7)},
+	{OFFSET(mdio_data), MODE(0) | RXACTIVE | PULLUP_EN}, /* MDIO_DATA */
+	{OFFSET(mdio_clk), MODE(0) | PULLUP_EN},	/* MDIO_CLK */
+	{-1},
+};
+
 void enable_uart0_pin_mux(void)
 {
 	configure_module_pin_mux(uart0_pin_mux);
@@ -63,6 +82,7 @@ void enable_board_pin_mux(void)
 	configure_module_pin_mux(mmc1_pin_mux);
 	configure_module_pin_mux(i2c0_pin_mux);
 	configure_module_pin_mux(gpio5_7_pin_mux);
+	configure_module_pin_mux(rgmii_pin_mux);
 }
 
 void enable_i2c0_pin_mux(void)
diff --git a/configs/byteboard_defconfig b/configs/byteboard_defconfig
new file mode 100644
index 0000000000..0ba4e36287
--- /dev/null
+++ b/configs/byteboard_defconfig
@@ -0,0 +1,33 @@
+CONFIG_ARM=y
+CONFIG_TARGET_BYTEBOARD=y
+CONFIG_SPL=y
+CONFIG_SYS_EXTRA_OPTIONS="SERIAL1,CONS_INDEX=1"
+# CONFIG_CMD_IMLS is not set
+# CONFIG_CMD_FLASH is not set
+# CONFIG_CMD_SETEXPR is not set
+CONFIG_SPI_FLASH_BAR=y
+CONFIG_SPI_FLASH=y
+
+CONFIG_NAND=n
+CONFIG_CMD_NAND=n
+CONFIG_SPL_NAND_SUPPORT=n
+
+CONFIG_SYS_CPU="armv7"
+CONFIG_SYS_SOC="am33xx"
+CONFIG_SYS_VENDOR="bytesatwork"
+CONFIG_SYS_BOARD="byteboard"
+CONFIG_SYS_CONFIG_NAME="byteboard"
+CONFIG_AM43XX=y
+
+CONFIG_HUSH_PARSER=y
+CONFIG_SYS_HUSH_PARSER=y
+CONFIG_SYS_PROMPT="U-Boot# "
+
+CONFIG_CMD_MMC=y
+CONFIG_CMD_EXT2=y
+CONFIG_CMD_FAT=y
+
+CONFIG_CMD_FDT=y
+# CONFIG_CMD_FPGA is not set
+CONFIG_OF_LIBFDT=y
+# CONFIG_EFI_LOADER is not set
diff --git a/configs/byteengine_m3_defconfig b/configs/byteengine_m3_defconfig
deleted file mode 100644
index caabbb872d..0000000000
--- a/configs/byteengine_m3_defconfig
+++ /dev/null
@@ -1,13 +0,0 @@
-CONFIG_ARM=y
-CONFIG_TARGET_BYTEENGINE_M3=y
-CONFIG_SPL=y
-CONFIG_SYS_EXTRA_OPTIONS="SERIAL1,CONS_INDEX=1"
-# CONFIG_CMD_IMLS is not set
-# CONFIG_CMD_FLASH is not set
-# CONFIG_CMD_SETEXPR is not set
-CONFIG_SPI_FLASH_BAR=y
-CONFIG_SPI_FLASH=y
-
-CONFIG_NAND=n
-CONFIG_CMD_NAND=n
-CONFIG_SPL_NAND_SUPPORT=n
diff --git a/include/configs/byteengine_m3.h b/include/configs/byteboard.h
similarity index 94%
rename from include/configs/byteengine_m3.h
rename to include/configs/byteboard.h
index c975cd2227..febb875991 100644
--- a/include/configs/byteengine_m3.h
+++ b/include/configs/byteboard.h
@@ -7,16 +7,8 @@
  * SPDX-License-Identifier:	GPL-2.0+
  */
 
-#ifndef __CONFIG_BYTEENGINE_M3_H
-#define __CONFIG_BYTEENGINE_M3_H
-
-#define CONFIG_AM43XX
-
-#undef CONFIG_NAND
-#undef CONFIG_CMD_NAND
-#undef CONFIG_SPL_NAND_SUPPORT
-
-#define CONFIG_CMD_FAT
+#ifndef __CONFIG_BYTEBOARD_H
+#define __CONFIG_BYTEBOARD_H
 
 #define CONFIG_ARCH_CPU_INIT
 #define CONFIG_SYS_CACHELINE_SIZE       32
-- 
2.11.0

